use std::str::FromStr;

#[derive(Debug, Copy, Clone)]
pub(crate) enum ElementName {
    Action,
	Base,
	Case,
	Comment,
	Contributor,
	DatabaseName,
	DiscussionThreadingInfo,
	FileName,
	Format,
	Generator,
	Id,
	Ip,
	LogItem,
	LogTitle,
	MediaWiki,
	Minor,
	Model,
	Namespace,
	Namespaces,
	Ns,
	Page,
	Params,
	ParentId,
	Redirect,
	Restrictions,
	Revision,
	Sha1,
	SiteInfo,
	SiteName,
	Size,
	Src,
	Text,
	ThreadAncestor,
	ThreadAuthor,
	ThreadEditStatus,
	ThreadID,
	ThreadPage,
	ThreadParent,
	ThreadSubject,
	ThreadType,
	Timestamp,
	Title,
	Type,
	Upload,
	Username,
}

impl FromStr for ElementName {
    type Err = ();

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        use ElementName::*;
        let res = match s {
            "action" => Action,
            "base" => Base,
            "case" => Case,
            "comment" => Comment,
            "contributor" => Contributor,
            "dbname" => DatabaseName,
            "discussionthreadinginfo" => DiscussionThreadingInfo,
            "filename" => FileName,
            "format" => Format,
            "generator" => Generator,
            "id" => Id,
            "ip" => Ip,
            "logitem" => LogItem,
            "logtitle" => LogTitle,
            "mediawiki" => MediaWiki,
            "minor" => Minor,
            "model" => Model,
            "namespace" => Namespace,
            "namespaces" => Namespaces,
            "ns" => Ns,
            "page" => Page,
            "params" => Params,
            "parentid" => ParentId,
            "redirect" => Redirect,
            "restrictions" => Restrictions,
            "revision" => Revision,
            "sha1" => Sha1,
            "siteinfo" => SiteInfo,
            "sitename" => SiteName,
            "size" => Size,
            "src" => Src,
            "text" => Text,
            "ThreadAncestor" => ThreadAncestor,
            "ThreadAuthor" => ThreadAuthor,
            "ThreadEditStatus" => ThreadEditStatus,
            "ThreadID" => ThreadID,
            "ThreadPage" => ThreadPage,
            "ThreadParent" => ThreadParent,
            "ThreadSubject" => ThreadSubject,
            "ThreadType" => ThreadType,
            "timestamp" => Timestamp,
            "title" => Title,
            "type" => Type,
            "upload" => Upload,
            "username" => Username,
            _ => return Err(()),
        };
        Ok(res)
    }
}